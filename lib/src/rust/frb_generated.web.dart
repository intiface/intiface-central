// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.10.0.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

// Static analysis wrongly picks the IO variant, thus ignore this
// ignore_for_file: argument_type_not_assignable

import 'api/device_config.dart';
import 'api/runtime.dart';
import 'api/specifiers.dart';
import 'api/util.dart';
import 'dart:async';
import 'dart:convert';
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_web.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  RustStreamSink<String> dco_decode_StreamSink_String_Sse(dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  EngineOptionsExternal dco_decode_box_autoadd_engine_options_external(
    dynamic raw,
  );

  @protected
  ExposedUserDeviceIdentifier
  dco_decode_box_autoadd_exposed_user_device_identifier(dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_16(dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_32(dynamic raw);

  @protected
  EngineOptionsExternal dco_decode_engine_options_external(dynamic raw);

  @protected
  ExposedSerialSpecifier dco_decode_exposed_serial_specifier(dynamic raw);

  @protected
  ExposedUserDeviceCustomization dco_decode_exposed_user_device_customization(
    dynamic raw,
  );

  @protected
  ExposedUserDeviceIdentifier dco_decode_exposed_user_device_identifier(
    dynamic raw,
  );

  @protected
  ExposedWebsocketSpecifier dco_decode_exposed_websocket_specifier(dynamic raw);

  @protected
  List<String> dco_decode_list_String(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  List<(String, ExposedSerialSpecifier)>
  dco_decode_list_record_string_exposed_serial_specifier(dynamic raw);

  @protected
  List<(String, ExposedWebsocketSpecifier)>
  dco_decode_list_record_string_exposed_websocket_specifier(dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_16(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_32(dynamic raw);

  @protected
  (String, ExposedSerialSpecifier)
  dco_decode_record_string_exposed_serial_specifier(dynamic raw);

  @protected
  (String, ExposedWebsocketSpecifier)
  dco_decode_record_string_exposed_websocket_specifier(dynamic raw);

  @protected
  int dco_decode_u_16(dynamic raw);

  @protected
  int dco_decode_u_32(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  RustStreamSink<String> sse_decode_StreamSink_String_Sse(
    SseDeserializer deserializer,
  );

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  EngineOptionsExternal sse_decode_box_autoadd_engine_options_external(
    SseDeserializer deserializer,
  );

  @protected
  ExposedUserDeviceIdentifier
  sse_decode_box_autoadd_exposed_user_device_identifier(
    SseDeserializer deserializer,
  );

  @protected
  int sse_decode_box_autoadd_u_16(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_32(SseDeserializer deserializer);

  @protected
  EngineOptionsExternal sse_decode_engine_options_external(
    SseDeserializer deserializer,
  );

  @protected
  ExposedSerialSpecifier sse_decode_exposed_serial_specifier(
    SseDeserializer deserializer,
  );

  @protected
  ExposedUserDeviceCustomization sse_decode_exposed_user_device_customization(
    SseDeserializer deserializer,
  );

  @protected
  ExposedUserDeviceIdentifier sse_decode_exposed_user_device_identifier(
    SseDeserializer deserializer,
  );

  @protected
  ExposedWebsocketSpecifier sse_decode_exposed_websocket_specifier(
    SseDeserializer deserializer,
  );

  @protected
  List<String> sse_decode_list_String(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  List<(String, ExposedSerialSpecifier)>
  sse_decode_list_record_string_exposed_serial_specifier(
    SseDeserializer deserializer,
  );

  @protected
  List<(String, ExposedWebsocketSpecifier)>
  sse_decode_list_record_string_exposed_websocket_specifier(
    SseDeserializer deserializer,
  );

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_16(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_32(SseDeserializer deserializer);

  @protected
  (String, ExposedSerialSpecifier)
  sse_decode_record_string_exposed_serial_specifier(
    SseDeserializer deserializer,
  );

  @protected
  (String, ExposedWebsocketSpecifier)
  sse_decode_record_string_exposed_websocket_specifier(
    SseDeserializer deserializer,
  );

  @protected
  int sse_decode_u_16(SseDeserializer deserializer);

  @protected
  int sse_decode_u_32(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  void sse_encode_AnyhowException(
    AnyhowException self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_StreamSink_String_Sse(
    RustStreamSink<String> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_engine_options_external(
    EngineOptionsExternal self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_box_autoadd_exposed_user_device_identifier(
    ExposedUserDeviceIdentifier self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_box_autoadd_u_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_engine_options_external(
    EngineOptionsExternal self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_exposed_serial_specifier(
    ExposedSerialSpecifier self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_exposed_user_device_customization(
    ExposedUserDeviceCustomization self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_exposed_user_device_identifier(
    ExposedUserDeviceIdentifier self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_exposed_websocket_specifier(
    ExposedWebsocketSpecifier self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_list_String(List<String> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
    Uint8List self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_list_record_string_exposed_serial_specifier(
    List<(String, ExposedSerialSpecifier)> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_list_record_string_exposed_websocket_specifier(
    List<(String, ExposedWebsocketSpecifier)> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_16(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_32(int? self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_exposed_serial_specifier(
    (String, ExposedSerialSpecifier) self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_record_string_exposed_websocket_specifier(
    (String, ExposedWebsocketSpecifier) self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_u_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire implements BaseWire {
  RustLibWire.fromExternalLibrary(ExternalLibrary lib);
}

@JS('wasm_bindgen')
external RustLibWasmModule get wasmModule;

@JS()
@anonymous
extension type RustLibWasmModule._(JSObject _) implements JSObject {}
